# -*- coding: utf-8 -*-
"""Customer Segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OX_ewSc3KXSmb-UyBlTm7fsmanZbDUbz
"""

#import libraries
!pip install seaborn
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt #for structured tables
import seaborn as sns

from sklearn.cluster import KMeans

"""#data collection and analysis"""

#Loading dataset from csv to pandas data frame
from google.colab import drive
drive.mount('/content/gdrive')

customer_data=pd.read_csv('/content/gdrive/My Drive/Colab Notebooks/Mall_Customers.csv')

#first five rows in data frame
customer_data.head()

#finding the number of rows and coloumns
customer_data.shape

#getting info about dataset
customer_data.info()

#checking for misssing values
customer_data.isnull().sum()

#choosing the annual income and spending score coloumn
x=customer_data.iloc[:,[3,4]].values
#inpython it starts from 0 index

print(x)

#choosing the number of clusters
#Parameter WCSS->WITHIN CLUSTERS SUM OF SQUARE
#IT TENDS TO FIND DISTANCE BETWEEN EACH DATASET AND ITS CENTREE
#WHEN U HAVE CORRECT NO OF CLUSTERS VALUE OF WCSS IS VERY LESS
#FINDING WCSS VALUE FOR DIFFERENT VALUE OF CLUSTERS
wcss=[]
for i in range(1,11): #1 to 10
  kmeans= KMeans(n_clusters=i,init='k-means++',random_state=42)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)

# Set Seaborn for better aesthetics
sns.set()

# Plot the Elbow Method graph
plt.plot(range(1, 11), wcss, marker='o')
plt.title('The Elbow Point Graph')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

k=5
#TRAINING THE KMEAN CLUSSTERING MODEL
kmeans=KMeans(n_clusters=k,init='k-means++',random_state=0)

#return a label for each datapoint based on their clustters
Y=kmeans.fit_predict(x)
print(Y)

"""#visualizing all the clusters"""

#plotting all the clusters and their centroids
plt.figure(figsize=(8,8))
plt.scatter(x[Y==0,0],x[Y==0,1],s=50,c='green',label='cluster1')
plt.scatter(x[Y==1,0],x[Y==1,1],s=50,c='red',label='cluster2')
plt.scatter(x[Y==2,0],x[Y==2,1],s=50,c='yellow',label='cluster3')
plt.scatter(x[Y==3,0],x[Y==3,1],s=50,c='blue',label='cluster4')
plt.scatter(x[Y==4,0],x[Y==4,1],s=50,c='orange',label='cluster5')

#plot centroids
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=100,c='cyan',label='centroid')

plt.xlabel('Annual Income')
plt.ylabel('Spending Score')

plt.title=('customer_groups')
plt.show()